networks:
  reverse-proxy:
    external: true
    name: reverse-proxy
  default:
    name: %network_name%
services:
  db:
    build:
      context: .docker/db
    environment:
      POSTGRES_PASSWORD: dummy-eject
      POSTGRES_USER: dummy-eject
    init: true
    labels:
      ddb.emit.docker:binary[pg_dump](args): pg_dump --dbname=postgresql://dummy-eject:dummy-eject@db/dummy-eject
      ddb.emit.docker:binary[pg_dump](name): pg_dump
      ddb.emit.docker:binary[pg_dump](workdir): /workdir
      ddb.emit.docker:binary[pg_restore](args): pg_restore
      ddb.emit.docker:binary[pg_restore](name): pg_restore
      ddb.emit.docker:binary[pg_restore](workdir): /workdir
      ddb.emit.docker:binary[psql](args): psql --dbname=postgresql://dummy-eject:dummy-eject@db/dummy-eject
      ddb.emit.docker:binary[psql](name): psql
      ddb.emit.docker:binary[psql](workdir): /workdir
    ports:
    - 41632:5432
    restart: 'no'
    volumes:
    - .:/workdir
    - db-data:/var/lib/postgresql/data
  elastic:
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    init: true
    labels:
      ddb.emit.certs:generate[dummy-eject-elastic]: elastic.dummy-eject.test
      traefik.enable: 'true'
      traefik.http.middlewares.dummy-eject-elastic-redirect-to-https.redirectscheme.scheme: https
      traefik.http.routers.dummy-eject-elastic-tls.rule: Host(`elastic.dummy-eject.test`)
      traefik.http.routers.dummy-eject-elastic-tls.service: dummy-eject-elastic
      traefik.http.routers.dummy-eject-elastic-tls.tls: 'true'
      traefik.http.routers.dummy-eject-elastic.middlewares: dummy-eject-elastic-redirect-to-https
      traefik.http.routers.dummy-eject-elastic.rule: Host(`elastic.dummy-eject.test`)
      traefik.http.routers.dummy-eject-elastic.service: dummy-eject-elastic
      traefik.http.services.dummy-eject-elastic.loadbalancer.server.port: '9200'
    networks:
    - default
    - reverse-proxy
    ports:
    - 41692:9200
    restart: 'no'
    volumes:
    - elastic-data:/usr/share/elasticsearch/data
volumes:
  db-data: {}
  elastic-data: {}
